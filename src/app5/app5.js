/*
    Node本身能够做到如此高性能的根本原因在于事件（event）的使用，以及对于事件监听者（callback）的调用上。
    Node本身是基于事件循环的。

    本质上，当Node启动一个文件或者服务器后，Node实际上是运行在一个死循环中的。
    while(true){
        ...
    }

    在这个死循环中，Node会不断发射事件、监听事件并且执行回调逻辑。

    事件来源主要有两种：一是Node自身所发射出的事件，二是来自于Node自身所运行的环境。
    监听事件：回调都是要依附于相应的事件的。
    执行回调逻辑：本质上都是由底层来执行的

    关于IO操作的异步执行逻辑：
    1、同步模式
    2、异步模式：poll、epoll（Window中是IOCP）

    Node的单线程：所谓单线程，指的是Node的逻辑执行主线程是单线程的，即JavaScript代码运行所处的线程，这是个单线程，因为JavaScript本身只能执行在单线程当中

 */